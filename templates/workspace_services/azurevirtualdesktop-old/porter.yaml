---
schemaVersion: 1.0.0
name: tre-service-azurevirtualdesktop
version: 0.1.20
description: "An Azure TRE service Azure Virtual Desktop"
dockerfile: Dockerfile.tmpl
registry: azuretre



# This is the configuration for Porter
# You must define steps for each action, but the rest is optional
# See https://getporter.org/bundle/manifest/file-format/ for a description of all the allowed fields in this document.
# See https://getporter.org/author-bundles for documentation on how to configure your bundle.
# Uncomment out the sections below to take full advantage of what Porter can do!

# Optional indicator of the resource type of this file

# If you want to customize the Dockerfile in use, uncomment the line below and update the referenced file.
# See https://getporter.org/bundle/custom-dockerfile/
#dockerfile: template.Dockerfile

credentials:
  # Credentials for interacting with Azure
  - name: azure_tenant_id
    env: ARM_TENANT_ID
  - name: azure_subscription_id
    env: ARM_SUBSCRIPTION_ID
  - name: azure_client_id
    env: ARM_CLIENT_ID
  - name: azure_client_secret
    env: ARM_CLIENT_SECRET
  # Credentials for interacting with the AAD Auth tenant
  - name: auth_client_id
    env: AUTH_CLIENT_ID
  - name: auth_client_secret
    env: AUTH_CLIENT_SECRET
  - name: auth_tenant_id
    env: AUTH_TENANT_ID

parameters:
  - name: workspace_id
    type: string
  - name: tre_id
    type: string
  - name: id
    type: string
    description: "Resource ID"
  - name: tfstate_resource_group_name
    type: string
    description: "Resource group containing the Terraform state storage account"
  - name: tfstate_storage_account_name
    type: string
    description: "The name of the Terraform state storage account"
  - name: tfstate_container_name
    env: tfstate_container_name
    type: string
    default: "tfstate"
    description: "The name of the Terraform state storage container"
  - name: avd_workspace_display_name
    description: "Name of the Azure Virtual Desktop workspace"
    default: "Azure Virtual Desktop Workspace"
  - name: avd_workspace_description
    description: "Description of the Azure Virtual Desktop workspace"
    default: "Azure Virtual Desktop Workspace Description"
  - name: avd_hostpool_display_name
    description: "Name of the Azure Virtual Desktop hostpool"
    default: "Azure Virtual Desktop Hostpool"
  - name: avd_hostpool_description
    description: "Description of the Azure Virtual Desktop hostpool"
    default: "Azure Virtual Desktop Hostpool Description"
  - name: avd_application_group_display_name
    description: "Name of the Azure Virtual Desktop App Group"
    default: "Azure Virtual Desktop App Group"
  - name: avd_application_group_description
    description: "Description of the Azure Virtual Desktop app group"
    default: "Azure Virtual Desktop App  Group Description"
  - name: arm_use_msi
    env: ARM_USE_MSI
    type: boolean
    default: false
  - name: arm_environment
    env: ARM_ENVIRONMENT
    type: string
    default: "public"
  - name: azure_environment
    type: string
    default: "AzureCloud"
    description: "Used by Azure CLI to set the Azure environment"
    env: AZURE_ENVIRONMENT

# Declare and optionally configure the mixins used by the bundle
mixins:
  - terraform:
      clientVersion: 1.7.0

# Define the steps that should execute when the bundle is installed
install:
  - terraform:
      description: "Deploy Azure Virtual Desktop"
      vars:
        workspace_id: ${ bundle.parameters.workspace_id }
        tre_id: ${ bundle.parameters.tre_id }
        tre_resource_id: ${ bundle.parameters.id }
        avd_workspace_display_name: ${ bundle.parameters.avd_workspace_display_name }
        avd_workspace_description: ${ bundle.parameters.avd_workspace_description }
        avd_hostpool_display_name: ${ bundle.parameters.avd_hostpool_display_name }
        avd_hostpool_description: ${ bundle.parameters.avd_hostpool_description }
        avd_application_group_display_name: ${ bundle.parameters.avd_application_group_display_name }
        avd_application_group_description: ${ bundle.parameters.avd_application_group_description }
      backendConfig:
        resource_group_name: ${ bundle.parameters.tfstate_resource_group_name }
        storage_account_name: ${ bundle.parameters.tfstate_storage_account_name }
        container_name: ${ bundle.parameters.tfstate_container_name }
        key: tre-service-azurevirtualdesktop-${ bundle.parameters.id }

upgrade:
 - terraform:
      description: "Deploy Guacamole Service"
      vars:
        workspace_id: ${ bundle.parameters.workspace_id }
        tre_id: ${ bundle.parameters.tre_id }
        image_name: ${ bundle.custom.runtime_image.name }
        image_tag: ${ bundle.parameters.image_tag }
        mgmt_acr_name: ${ bundle.parameters.mgmt_acr_name }
        mgmt_resource_group_name: ${ bundle.parameters.mgmt_resource_group_name }
        guac_disable_copy: ${ bundle.parameters.guac_disable_copy }
        guac_disable_paste: ${ bundle.parameters.guac_disable_paste }
        guac_enable_drive: ${ bundle.parameters.guac_enable_drive }
        guac_drive_name: ${ bundle.parameters.guac_drive_name }
        guac_drive_path: ${ bundle.parameters.guac_drive_path }
        guac_disable_download: ${ bundle.parameters.guac_disable_download }
        guac_disable_upload: ${ bundle.parameters.guac_disable_upload }
        is_exposed_externally: ${ bundle.parameters.is_exposed_externally }
        tre_resource_id: ${ bundle.parameters.id }
        aad_authority_url: ${ bundle.parameters.aad_authority_url }
        arm_environment: ${ bundle.parameters.arm_environment }
      backendConfig:
        resource_group_name: ${ bundle.parameters.tfstate_resource_group_name }
        storage_account_name: ${ bundle.parameters.tfstate_storage_account_name }
        container_name: ${ bundle.parameters.tfstate_container_name }
        key: tre-service-guacamole-${ bundle.parameters.id }
      outputs:
        - name: authentication_callback_uri
        - name: web_apps_addresses
        - name: admin_connection_uri

uninstall:
 - terraform:
      description: "Deploy Guacamole Service"
      vars:
        workspace_id: ${ bundle.parameters.workspace_id }
        tre_id: ${ bundle.parameters.tre_id }
        image_name: ${ bundle.custom.runtime_image.name }
        image_tag: ${ bundle.parameters.image_tag }
        mgmt_acr_name: ${ bundle.parameters.mgmt_acr_name }
        mgmt_resource_group_name: ${ bundle.parameters.mgmt_resource_group_name }
        guac_disable_copy: ${ bundle.parameters.guac_disable_copy }
        guac_disable_paste: ${ bundle.parameters.guac_disable_paste }
        guac_enable_drive: ${ bundle.parameters.guac_enable_drive }
        guac_drive_name: ${ bundle.parameters.guac_drive_name }
        guac_drive_path: ${ bundle.parameters.guac_drive_path }
        guac_disable_download: ${ bundle.parameters.guac_disable_download }
        guac_disable_upload: ${ bundle.parameters.guac_disable_upload }
        is_exposed_externally: ${ bundle.parameters.is_exposed_externally }
        tre_resource_id: ${ bundle.parameters.id }
        aad_authority_url: ${ bundle.parameters.aad_authority_url }
        arm_environment: ${ bundle.parameters.arm_environment }
      backendConfig:
        resource_group_name: ${ bundle.parameters.tfstate_resource_group_name }
        storage_account_name: ${ bundle.parameters.tfstate_storage_account_name }
        container_name: ${ bundle.parameters.tfstate_container_name }
        key: tre-service-guacamole-${ bundle.parameters.id }
      outputs:
        - name: authentication_callback_uri
        - name: web_apps_addresses
        - name: admin_connection_uri
